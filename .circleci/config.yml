version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11
  slack: circleci/slack@3.4.1
#  aws-code-deploy: circleci/aws-code-deploy@0.0.9
jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    working_directory: ~/graphql
    steps:
      - checkout # ソースコードを引っ張ってくる
      - restore_cache: # `build.gradle` が変更されている場合に、保存されているキャッシュを復元
          key: backend-{{ checksum "build.gradle" }}
      - run:
          name: Build
          command: ./gradlew assemble
      - save_cache: # 依存関係のキャッシュ
          paths:
            - ~/.gradle
          key: backend-{{ checksum "build.gradle" }}
      - store_artifacts: # アーティファクトへの保存
          path: build/libs
      - persist_to_workspace: # 他のジョブと共有するパス
          root: . # workspaceのrootパス（絶対パスかworking_directoryからの相対パス）
          paths:
            - . # 共有するパス
      - slack/status:
          success_message: 'Build Job Done.'
          failure_message: 'Build Job Failed.'
          webhook: '${SLACK_WEBHOOK}'
  upload:
    working_directory: ~/backend
    steps:
      - attach_workspace: # persist_to_workspaceで共有したパスを適用する
            at: .
      - aws-s3/sync: # jarをs3にアップロードする
          from: build/libs
          to: 's3://wever-content-artifact'
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          overwrite: true
      - slack/status:
          success_message: 'Upload Job Done.'
          failure_message: 'Upload Job Failed.'
          webhook: '${SLACK_WEBHOOK}'
  deploy:
    working_directory: ~/backend
    steps:
      - aws-s3/sync: # jarをs3にアップロードする
          from: build/libs
          to: 's3://wever-content-artifact'
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          overwrite: true
      - slack/status:
          success_message: 'Upload Job Done.'
          failure_message: 'Upload Job Failed.'
          webhook: '${SLACK_WEBHOOK}'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - upload:
          requires:
            - build
      - deploy:
          requires:
            - upload
